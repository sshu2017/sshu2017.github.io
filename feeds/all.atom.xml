<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SSHU's BLOG</title><link href="https://sshu2017.github.io/" rel="alternate"></link><link href="https://sshu2017.github.io/feeds/all.atom.xml" rel="self"></link><id>https://sshu2017.github.io/</id><updated>2020-06-29T00:00:00-07:00</updated><subtitle>About Programming, Data Science/Engineering etc.</subtitle><entry><title>TIL: How to use Git Hooks for Better Code Quality</title><link href="https://sshu2017.github.io/How%20to%20use%20Git%20Hooks%20for%20Better%20Code%20Quality.html" rel="alternate"></link><published>2020-06-29T00:00:00-07:00</published><updated>2020-06-29T00:00:00-07:00</updated><author><name>sshu</name></author><id>tag:sshu2017.github.io,2020-06-29:/How to use Git Hooks for Better Code Quality.html</id><summary type="html">&lt;p&gt;I am aware of the existence of &lt;strong&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git Hooks&lt;/a&gt;&lt;/strong&gt; for quite a while but haven't really tried it out myself until today. Although it looks a simple thing to do, I did come across some &lt;em&gt;interesting&lt;/em&gt; issues and had to do a little bit research. So why not share what â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am aware of the existence of &lt;strong&gt;&lt;a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"&gt;Git Hooks&lt;/a&gt;&lt;/strong&gt; for quite a while but haven't really tried it out myself until today. Although it looks a simple thing to do, I did come across some &lt;em&gt;interesting&lt;/em&gt; issues and had to do a little bit research. So why not share what I learned with the internet?&lt;/p&gt;
&lt;p&gt;First, I created one simple Python script, &lt;strong&gt;&lt;em&gt;encrypt.py&lt;/em&gt;&lt;/strong&gt;,  in which a function called &lt;strong&gt;&lt;em&gt;encOnePassword&lt;/em&gt;&lt;/strong&gt; is defined.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hashlib&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;encOnePassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rawPassword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Encrypt one string by using SHA256 with *Salt*&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        x (string): Any password from user input&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;salt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This is the SALT&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# if I accidentally changed th salt&lt;/span&gt;
    &lt;span class="c1"&gt;# salt = &amp;quot;This is not the SALT to use!&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;salt&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;rawPassword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then I created another simple test script &lt;strong&gt;&lt;em&gt;test_encrypt.py&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;encrypt&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encOnePassword&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_encOnePassword&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;encOnePassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;1234567&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9f9df71798d99794f643f7282d2b98c20a538ee0d307aa1b3d2387635c6ae52f&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;encOnePassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;ABC_DEF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;90da2f1901ff71c8ffdb314ce2621180d0169492ea9343bc1a9bb86bbfecd6b6&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, I ran the &lt;strong&gt;&lt;em&gt;git init&lt;/em&gt;&lt;/strong&gt; command and initialized a git repo. But when I looked into the &lt;strong&gt;&lt;em&gt;.git/hooks/&lt;/em&gt;&lt;/strong&gt; directory, there are a bunch of codes in there already! Well, that's something I didn't expect at all.&lt;/p&gt;
&lt;p&gt;&lt;img src="images/git_hooks_samples.png"&gt;&lt;/p&gt;
&lt;p&gt;So I made a directory call &lt;strong&gt;&lt;em&gt;backup&lt;/em&gt;&lt;/strong&gt; and moved all these samples into it, so they won't interfere with what I plan to do next. Then I created a shell script called &lt;strong&gt;&lt;em&gt;pre-commit.sh&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;current_branch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;git branch &lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;sed &lt;span class="s1"&gt;&amp;#39;s/* //&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$current_branch&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;master&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Running tests pre-committ&amp;quot;&lt;/span&gt;
    python -m pytest test_*.py
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Tests all passed!&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Tests failed ... Committ not successful!&amp;quot;&lt;/span&gt;
        &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;*&lt;em&gt;Here I referenced the codes from &lt;a href="https://www.giacomodebidda.com/a-simple-git-hook-for-your-python-projects/"&gt;Giacomo's blog&lt;/a&gt; and changed it a little to fit my needs.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When all of these are in place, I made the initial commit and it went smoothly. Then I changed the &lt;strong&gt;&lt;em&gt;salt&lt;/em&gt;&lt;/strong&gt; in the &lt;strong&gt;&lt;em&gt;encOnePassword&lt;/em&gt;&lt;/strong&gt; function, to mimic an unintentional bug, and commit the code again. I though the &lt;strong&gt;&lt;em&gt;pre-commit&lt;/em&gt;&lt;/strong&gt; hook would throw out an error and interrupt the commit, but &lt;strong&gt;&lt;em&gt;IT DID NOT&lt;/em&gt;&lt;/strong&gt;! What a surprise!&lt;/p&gt;
&lt;p&gt;After a little search on &lt;a href="www.stacoverflow.com"&gt;stackoverflow&lt;/a&gt;,I found &lt;a href="https://stackoverflow.com/questions/5084100/post-commit-hook-not-running"&gt;this answer&lt;/a&gt; and did two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Changed the script name from &lt;code&gt;pre-commit.sh&lt;/code&gt; to &lt;code&gt;pre-commit&lt;/code&gt; (yes, remove the &lt;code&gt;.sh&lt;/code&gt; part.)&lt;/li&gt;
&lt;li&gt;Made the script an executable one by running &lt;code&gt;chmod +x pre-commit&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, finally, the hook is working as I expected and it prevented me from committing bad codes to the master branch! Hooray!&lt;/p&gt;</content><category term="Python, Git, Today I Learned"></category></entry><entry><title>Raspberry Pi Cluster with Hadoop and Spark - How I tried, failed, and learned</title><link href="https://sshu2017.github.io/raspberry-pi-cluster-with-hadoop-and-spark-how-i-tried-failed-and-learned.html" rel="alternate"></link><published>2020-06-25T00:00:00-07:00</published><updated>2020-06-25T00:00:00-07:00</updated><author><name>sshu</name></author><id>tag:sshu2017.github.io,2020-06-25:/raspberry-pi-cluster-with-hadoop-and-spark-how-i-tried-failed-and-learned.html</id><summary type="html">&lt;p&gt;This is not a tutorial on how to build Raspberry Pi cluster and install Hadoop/Spark on it at all. This is a &lt;strong&gt;diary&lt;/strong&gt; for myself to document the process of tring to build one, failed in the end, and learned lots of new things. &lt;/p&gt;
&lt;p&gt;I have seen many other â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is not a tutorial on how to build Raspberry Pi cluster and install Hadoop/Spark on it at all. This is a &lt;strong&gt;diary&lt;/strong&gt; for myself to document the process of tring to build one, failed in the end, and learned lots of new things. &lt;/p&gt;
&lt;p&gt;I have seen many other people built clusters with several Raspberry Pis, ranging from 4 RPis to 100+&lt;/p&gt;
&lt;p&gt;https://dev.to/awwsmm/building-a-raspberry-pi-hadoop-spark-cluster-8b2&lt;/p&gt;</content><category term="Misc"></category></entry><entry><title>Scraping data in Scala with Jsoup</title><link href="https://sshu2017.github.io/scraping-data-in-scala-with-jsoup.html" rel="alternate"></link><published>2020-06-10T00:00:00-07:00</published><updated>2020-06-10T00:00:00-07:00</updated><author><name>sshu</name></author><id>tag:sshu2017.github.io,2020-06-10:/scraping-data-in-scala-with-jsoup.html</id><content type="html">&lt;p&gt;How are you today?&lt;/p&gt;
</content><category term="Scala"></category></entry><entry><title>The .vimrc File I Use and Love</title><link href="https://sshu2017.github.io/the-vimrc-file-i-use-and-love.html" rel="alternate"></link><published>2020-06-10T00:00:00-07:00</published><updated>2020-06-10T00:00:00-07:00</updated><author><name>sshu</name></author><id>tag:sshu2017.github.io,2020-06-10:/the-vimrc-file-i-use-and-love.html</id><summary type="html">&lt;p&gt;I started using Vim as my major code editor in 2017, when I started my current job as a Data Scientist at &lt;a href="https://pointpredictive.com/" target="_blank"&gt;PointPredictive Inc.&lt;/a&gt;, because the job requires me to SSH into remote Linux servers and edit Python and Bash scripts in the terminal. To be precise, I started with â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I started using Vim as my major code editor in 2017, when I started my current job as a Data Scientist at &lt;a href="https://pointpredictive.com/" target="_blank"&gt;PointPredictive Inc.&lt;/a&gt;, because the job requires me to SSH into remote Linux servers and edit Python and Bash scripts in the terminal. To be precise, I started with Nano, which could let me get my job done. However I felt Nano is really inconvenient to use. So I decided to switch to Vim. The initial phase of using Vim is okay, not as horrible as many people have found, except that I DID go to stackoverflow to find out how to quit Vim (Ah yes, I was one of the &lt;a href="https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/" target="_blank"&gt;1 million people who had struggled&lt;/a&gt;). As time went by, the more I played around with Vim , the more I realized how powerful and versatile it is, and the more I liked it.&lt;/p&gt;
&lt;p&gt;After almost 3 years of using Vim, I finally have my .vimrc that I feel is good enough for me. And here it is.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;nocompatible&lt;/span&gt;
        &lt;span class="n"&gt;filetype&lt;/span&gt; &lt;span class="k"&gt;off&lt;/span&gt;
        &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;rtp&lt;/span&gt;&lt;span class="o"&gt;+=~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bundle&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vundle&lt;/span&gt;
        &lt;span class="k"&gt;call&lt;/span&gt; &lt;span class="n"&gt;vundle&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gmarik/vundle&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jiangmiao/auto-pairs&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Lokaltog/vim-powerline&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scrooloose/nerdcommenter&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tmhedberg/SimpylFold&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Yggdroot/indentLine&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scrooloose/syntastic&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;flazz/vim-colorschemes&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scrooloose/nerdtree&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RRethy/vim-illuminate&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;majutsushi/tagbar&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;Bundle&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;psliwka/vim-smoothie&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;vb&lt;/span&gt;
&lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;is_bash&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;incsearch&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;hlsearch&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;bg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;light&lt;/span&gt;
&lt;span class="n"&gt;syntax&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;autoindent&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;smartindent&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;relativenumber&lt;/span&gt;
&lt;span class="n"&gt;hi&lt;/span&gt; &lt;span class="n"&gt;clear&lt;/span&gt;
&lt;span class="n"&gt;syntax&lt;/span&gt; &lt;span class="n"&gt;enable&lt;/span&gt;
&lt;span class="n"&gt;colorscheme&lt;/span&gt; &lt;span class="n"&gt;monokai&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;shiftwidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;tabstop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;expandtab&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;laststatus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;showmatch&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;novisualbell&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;cursorline&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;guicursor&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;blinkon0&lt;/span&gt;
&lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;PyFlakeCheckers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pep8, mccabe, frosted&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;PyFlakeOnWrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Misc"></category></entry><entry><title>Use Rvest to Download Traffic Data from Caltrans Performance Measurement System</title><link href="https://sshu2017.github.io/use-rvest-to-download-traffic-data-from-caltrans-performance-measurement-system.html" rel="alternate"></link><published>2016-08-08T07:29:00-07:00</published><updated>2016-08-08T07:29:00-07:00</updated><author><name>sshu</name></author><id>tag:sshu2017.github.io,2016-08-08:/use-rvest-to-download-traffic-data-from-caltrans-performance-measurement-system.html</id><summary type="html">&lt;p&gt;Recently I helped a friend of mine to download some traffic time-series data from the &lt;a href="http://pems.dot.ca.gov/"&gt;Caltrans Performance Measurement System&lt;/a&gt;. Basically we need to download the traffic data from all the major traffic census stations on the I-405 freeway, and the time span needs to cover a couple of months. After â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I helped a friend of mine to download some traffic time-series data from the &lt;a href="http://pems.dot.ca.gov/"&gt;Caltrans Performance Measurement System&lt;/a&gt;. Basically we need to download the traffic data from all the major traffic census stations on the I-405 freeway, and the time span needs to cover a couple of months. After searching online for a couple of days and asking a few questions on &lt;a href="http://stackoverflow.com/"&gt;stackoverflow&lt;/a&gt;Â (&lt;a href="http://stackoverflow.com/questions/28418770/using-rvest-or-httr-to-log-in-to-non-standard-forms-on-a-webpage"&gt;1&lt;/a&gt;,&lt;a href="http://stackoverflow.com/questions/38687068/with-rvest-how-to-extract-html-contents-from-the-object-returned-by-submit-form"&gt;2&lt;/a&gt;,&lt;a href="http://stackoverflow.com/questions/38759663/how-to-reuse-a-session-to-avoid-repeated-login-when-scraping-with-rvest"&gt;3&lt;/a&gt;) I finally assembled a piece of R code to accomplish what we need to do.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;rm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rvest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;httr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;getTable&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c1"&gt;# This function extract the table from a response&lt;/span&gt;
  &lt;span class="n"&gt;pg&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;html_nodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;table.inlayTable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; &lt;span class="nf"&gt;html_table&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tab&lt;/span&gt;
  &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# return the content of table&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;generateURL&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;siteID&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c1"&gt;# This function generates a URL for each input siteID&lt;/span&gt;
  &lt;span class="n"&gt;urlPart1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://pems.dot.ca.gov/?report_form=1&amp;amp;dnode=tmgs&amp;amp;content=tmg_volumes&amp;amp;tab=tmg_vol_ts&amp;amp;export=&amp;amp;tmg_station_id=&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;urlPart2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;amp;s_time_id=1369094400&amp;amp;s_time_id_f=05%2F21%2F2013&amp;amp;e_time_id=1371772740&amp;amp;e_time_id_f=06%2F20%2F2013&amp;amp;tod=all&amp;amp;tod_from=0&amp;amp;tod_to=0&amp;amp;dow_5=on&amp;amp;dow_6=on&amp;amp;tmg_sub_id=all&amp;amp;q=obs_flow&amp;amp;gn=hour&amp;amp;html.x=34&amp;amp;html.y=8&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urlPart1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;siteID&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;urlPart2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;return &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;siteIDList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;74250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;75020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;74020&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mainURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://pems.dot.ca.gov/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pgsession&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;html_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainURL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pgform&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;html_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pgsession&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;filled_form&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;set_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pgform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;segoviashu2000@yahoo.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;house6y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# slog is the logged-in session that can be reused&lt;/span&gt;
&lt;span class="n"&gt;slog&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;submit_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pgsession&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filled_form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="c1"&gt;# loop thru siteIDList to scrape all the tables&lt;/span&gt;
&lt;span class="n"&gt;vectorOfTables&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;siteIDList&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;siteID&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;siteIDList&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nf"&gt;print &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Working on site:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="nf"&gt;print &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;siteID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;newsession&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;jump_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;slog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;generateURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;siteID&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="n"&gt;vectorOfTables&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;getTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newsession&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="m"&gt;+1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Show the first table in vectorOfTables&lt;/span&gt;
&lt;span class="n"&gt;vectorOfTables&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And remember to always use caution when scarping!&lt;/p&gt;</content><category term="R, web-scraping"></category></entry><entry><title>How to Download Your Fitbit Second-Level Data Without Coding</title><link href="https://sshu2017.github.io/how-to-download-your-fitbit-second-level-data-without-coding.html" rel="alternate"></link><published>2016-06-16T21:45:00-07:00</published><updated>2016-06-16T21:45:00-07:00</updated><author><name>shushi2000</name></author><id>tag:sshu2017.github.io,2016-06-16:/how-to-download-your-fitbit-second-level-data-without-coding.html</id><summary type="html">&lt;p&gt;If you are a Fitbit user who wants to save a copy of Fitbit dataÂ onÂ your computer but doesn't have advanced programming skills , this tutorial is right for you! You don't need to do any coding at all to save your second-level data. I have been struggling with getting â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are a Fitbit user who wants to save a copy of Fitbit dataÂ onÂ your computer but doesn't have advanced programming skills , this tutorial is right for you! You don't need to do any coding at all to save your second-level data. I have been struggling with getting all the so-called 'intraday data' for quite a while. I have found many useful resources online, for example, &lt;a href="http://pdwhomeautomation.blogspot.com/2015/03/sleep-infographic-using-raspberry-pi.html"&gt;Paul's tutorial&lt;/a&gt;, Â &lt;a href="https://github.com/CollinChaffin/psFitb1t"&gt;Collin Chaffin's Powershell module&lt;/a&gt;, and the &lt;a href="https://github.com/orcasgit/python-fitbit"&gt;Fitbit-Python API&lt;/a&gt;, but they are somehow complicated and I just could not make any of these working for me smoothly. Â Recently I finally figured out a way to download these Fitbit dataÂ without any coding. Are you ready?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1: Register an app on &lt;a href="http://dev.fitbit.com"&gt;http://dev.fitbit.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First you need to register an account on &lt;a href="http://dev.fitbit.com"&gt;dev.fitbit.com&lt;/a&gt;, and then click 'MANAGE YOUR APPS' on the top right area. Next you need to click 'Register a new app' button at the top right area to start with. Well, this step is simple, just make sure the OAuth 2.0 Â Application Type is set to 'Personal', and the Callback URL is complete - including the 'http://' part and also a '/' at the end. Here I used 'http://google.com/' as an example. I have used this blog's URL 'http://shishu.info/' which worked just fine too.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/app2.jpg"&gt;&lt;img alt="app2" class="aligncenter size-full wp-image-195" height="937" src="http://shishu.info/wp-content/uploads/2016/06/app2.jpg" width="749"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After you click the red 'Register' button, you will be able to see the credentials for the app you just registered. The 'OAuth 2.0 Client ID' and 'Client Secret' will be used inÂ the next step.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/credentials2.jpg"&gt;&lt;img alt="credentials2" class="aligncenter size-full wp-image-196" height="628" src="http://shishu.info/wp-content/uploads/2016/06/credentials2.jpg" width="748"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2: Use the OAuth 2.0 tutorial page&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Next you need to right click the 'OAuth 2.0 tutorial page' link and open it in a new tab, so that you can look back at your app's credentials easily. Make sure the 'Implicit Grant Flow' is chosen instead of 'Authorization Code Flow' - this will make things much easier! After you copy/paste the 'Client ID' and 'Client Secret' into the blanks and put in the Redirect URI, click the auto-generated link.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/tutorial1.jpg"&gt;&lt;img alt="tutorial1" class="aligncenter size-full wp-image-198" height="803" src="http://shishu.info/wp-content/uploads/2016/06/tutorial1.jpg" width="757"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then you will see the confirmation page. Just click 'Allow'.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/confirmation.jpg"&gt;&lt;img alt="confirmation" class="aligncenter size-full wp-image-199" height="579" src="http://shishu.info/wp-content/uploads/2016/06/confirmation.jpg" width="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And you will be led to the 'Redirect URI', which is 'http://google.com/' in this case. Â But the address bar now shows a very long string which is the token for your app.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/token.jpg"&gt;&lt;img alt="token" class="aligncenter size-full wp-image-200" height="520" src="http://shishu.info/wp-content/uploads/2016/06/token.jpg" width="1802"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next you need to copy and paste everything in the address bar but without the starting part ( https://www.google.com/ ) to the 'Parse response' section, and hitÂ enter key once. This way you can clearly see what the token is, what the scope is, and how long the token is valid. In this case, the token is valid for 1 week, which equals to 604800 seconds. Pretty good, right?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/token2.jpg"&gt;&lt;img alt="token2" class="aligncenter size-full wp-image-201" height="443" src="http://shishu.info/wp-content/uploads/2016/06/token2.jpg" width="742"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3: Make request and get the data!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After you are done with the 'Parse response', the next step is ready for you automatically.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/curl.jpg"&gt;&lt;img alt="curl" class="aligncenter size-full wp-image-202" height="343" src="http://shishu.info/wp-content/uploads/2016/06/curl.jpg" width="739"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Justclick theÂ 'Send to Hurl.it' link and 'Launch Request' in the new page. Make sure to tell the web that you are not a robot too.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/Hurl_it.jpg"&gt;&lt;img alt="Hurl_it" class="aligncenter size-full wp-image-203" height="792" src="http://shishu.info/wp-content/uploads/2016/06/Hurl_it.jpg" width="1827"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After that, if you see the '200 OK' status - meaning everything works fine. And you can find the data you want in the lower half of the page. Like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/06/body.jpg"&gt;&lt;img alt="body" class="aligncenter size-full wp-image-204" height="829" src="http://shishu.info/wp-content/uploads/2016/06/body.jpg" width="1617"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you click 'view raw' at the right side, you will see the 'BODY' will be changed to raw text file and you can simply copy / paste themÂ to a text editor.Â And that's all you do to download your Fitbit second-level data! As I promised, you don't need to know any programming skills to accomplish this, isn't that cool?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional tips:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;tip 1: other data types&lt;/p&gt;
&lt;p&gt;If you want some other data rather than the 'user profile', you can simply change the 'API endpoint URL' in the 'Make Request' step. According the the &lt;a href="https://dev.fitbit.com/docs/"&gt;Fitbit API documentation&lt;/a&gt;, you can get the heart rate data by using this URL:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://api.fitbit.com/1/user/-/activities/heart/date/today/1d.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Or the sleep data by using:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://api.fitbit.com/1/user/28H22H/sleep/date/2014-09-01.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;tip 2: save json file in an easier way&lt;/p&gt;
&lt;p&gt;If you think the 'Send to Hurl.it' method is not fast enough, you can copy the 'curl' command auto-generated in the 'Make Request' step and run it in terminal (for Windows, that is the 'cmd' window). Add the following part to the end of the copied 'curl' command so that the data will be saved to your disk:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt; data_file.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;tip 3: save multiple days' data automatically&lt;/p&gt;
&lt;p&gt;I think Fitbit provides the functionality to let uers download multiple days' data with one command, by specifying the date rage in the curl request. However I could not make it work for me for some unknown reason. Therefore I used a piece of Python code to download multiple days' data for me. Here's the code, which I think is pretty self-explanatory.&lt;/p&gt;
&lt;p&gt;``` {lang="Python" line="0"}
import requests
import json
import pandas as pd
from time import sleep&lt;/p&gt;
&lt;h1&gt;put the token for your app in between the single quotes&lt;/h1&gt;
&lt;p&gt;token = ''&lt;/p&gt;
&lt;h1&gt;make a list of dates&lt;/h1&gt;
&lt;h1&gt;ref: http://stackoverflow.com/questions/993358/creating-a-range-of-dates-in-python&lt;/h1&gt;
&lt;h1&gt;You can change the start and end date as you want&lt;/h1&gt;
&lt;h1&gt;Just make sure to use the yyyy-mm-dd format&lt;/h1&gt;
&lt;p&gt;start_date = '2015-12-28'
end_date = '2016-06-14'
datelist = pd.date_range(start = pd.to_datetime(start_date),
                         end = pd.to_datetime(end_date)).tolist()&lt;/p&gt;
&lt;p&gt;'''
The codes below use a for loop to generate one URL for each day in the datelist,
and then request each day's data and save the data into individual json files.
Because Fitbit limit 150 request per hour, I let the code sleep for 30 seconds 
between each request, to meet this limitation.
'''
for ts in datelist:
    date = ts.strftime('%Y-%m-%d')
    url = 'https://api.fitbit.com/1/user/-/activities/heart/date/' + date + '/1d/1sec/time/00:00/23:59.json'
    filename = 'HR'+ date +'.json'
    response = requests.get(url=url, headers={'Authorization':'Bearer ' + token})&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;if response.ok:&lt;/span&gt;
&lt;span class="err"&gt;    with open(filename, &amp;#39;w&amp;#39;) as f:&lt;/span&gt;
&lt;span class="err"&gt;        json.dump(response.content, f)&lt;/span&gt;
&lt;span class="err"&gt;    print (date + &amp;#39; is saved!&amp;#39;)&lt;/span&gt;
&lt;span class="err"&gt;    sleep(30)&lt;/span&gt;
&lt;span class="c"&gt;else:&lt;/span&gt;
&lt;span class="c"&gt;    print (&amp;#39;The file of %s is not saved due to error!&amp;#39; % date)&lt;/span&gt;
&lt;span class="c"&gt;    sleep(30)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;</content><category term="General, Python"></category></entry><entry><title>TensorFlow on Windows 10 Using Docker Installation Method</title><link href="https://sshu2017.github.io/tensorflow-on-windows-10-using-docker-installation-method.html" rel="alternate"></link><published>2016-05-17T23:31:00-07:00</published><updated>2016-05-17T23:31:00-07:00</updated><author><name>shushi2000</name></author><id>tag:sshu2017.github.io,2016-05-17:/tensorflow-on-windows-10-using-docker-installation-method.html</id><summary type="html">&lt;p&gt;I am taking an online course of Deep Learning now and it requires me to use TensorFlow. I spent a lot of time searching around, testing different things, and finally managed to run TensorFlow on my windows 10 laptop. So I think maybe I should write a post to remind â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am taking an online course of Deep Learning now and it requires me to use TensorFlow. I spent a lot of time searching around, testing different things, and finally managed to run TensorFlow on my windows 10 laptop. So I think maybe I should write a post to remind myself, just in case I need to do it again in the future. And I hope this post can save someone else's time too.&lt;/p&gt;
&lt;p&gt;The overview section of &lt;a href="https://www.tensorflow.org/versions/r0.8/get_started/os_setup.html"&gt;Download and Setup page&lt;/a&gt;Â says there are four different ways to install TensorFlow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pip install&lt;/li&gt;
&lt;li&gt;Virtualenv install&lt;/li&gt;
&lt;li&gt;Anaconda install&lt;/li&gt;
&lt;li&gt;Docker install&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since I have heard about docker for a while but never get a chance to use it, I think it is a great opportunity for me to learn how to use docker. So I chose the Docker install method here. It looks pretty simple, only three steps.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/Capture15.jpg"&gt;&lt;img alt="steps" class="aligncenter wp-image-139 size-full" height="194" src="http://shishu.info/wp-content/uploads/2016/05/Capture15.jpg" width="802"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, these three steps took me a whole morning...&lt;/p&gt;
&lt;p&gt;First, I went to the &lt;a href="https://docs.docker.com/windows/step_one/"&gt;Install Docker for Windows&lt;/a&gt; page and followed the instructions. I have no idea about whether the virtualization is enabled or not on my laptop, and my Task Manager looks different with the image shown on the instruction page.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/Capture1-1.jpg"&gt;&lt;img alt="Task Manager" class="aligncenter wp-image-151 size-full" height="632" src="http://shishu.info/wp-content/uploads/2016/05/Capture1-1.jpg" width="1058"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I struggled with this and the BIOS for a while and found out that the virtualization IS enabled from the System Information (by runing msinfo32 command).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/system-info.jpg"&gt;&lt;img alt="msinfo32" class="aligncenter wp-image-152 size-full" height="631" src="http://shishu.info/wp-content/uploads/2016/05/system-info.jpg" width="1252"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next, I installed the Docker Toolbox since I am pretty sure I am use a 64-bit Windows. This process is very easy and straightforward. After installing Docker Toolbox, three more icons showed up on my desktop.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/Capture14.jpg"&gt;&lt;img alt="short cuts" class="aligncenter wp-image-153 size-full" height="195" src="http://shishu.info/wp-content/uploads/2016/05/Capture14.jpg" width="451"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IÂ launched the Docker Toolbox terminal by double-clicking the Quickstart Terminal icon and made my very first docker command: "&lt;strong&gt;docker run hello-world&lt;/strong&gt;". So far so good.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/Capture5.jpg"&gt;&lt;img alt="terminal" class="aligncenter wp-image-144 size-full" height="484" src="http://shishu.info/wp-content/uploads/2016/05/Capture5.jpg" width="659"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So now I have finished the first step: "&lt;strong&gt;Install Docker on your machine&lt;/strong&gt;".Â ButÂ I had no idea how to do theÂ second step: "&lt;strong&gt;Create a Docker group to allow launching containers without sudo&lt;/strong&gt;". Â And the big lesson I learned here is that, &lt;strong&gt;this second step is NOT necessary&lt;/strong&gt;, at least in my case.Â I skipped this step and went ahead to the third step: "&lt;strong&gt;Launch a Docker container with the TensorFlow image&lt;/strong&gt;".&lt;/p&gt;
&lt;p&gt;I first tried "&lt;strong&gt;\$ docker run it gcr.io/tensorflow/tensorflow&lt;/strong&gt;" and everything looked good from the terminal, which said "&lt;strong&gt;The Jupyter Notebook is running at http://[all ip addresses on your system]:8888/&lt;/strong&gt;". Wait, what are "all ip addresses"? I typed in "localhost:8888" in my Chrome browser address bar but the Jupyter Notebook did not load...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/localhost-not-working.jpg"&gt;&lt;img alt="localhost not working" class="aligncenter wp-image-154 size-full" height="478" src="http://shishu.info/wp-content/uploads/2016/05/localhost-not-working.jpg" width="734"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once again, &lt;a href="http://stackoverflow.com/questions/35582875/unable-to-start-tensorflow-within-docker-on-windows"&gt;aÂ post on stackoverflow&lt;/a&gt; is my life-saver. I followed the answer and everything worked out.Â First I ran the command "&lt;strong&gt;\$ docker-machine ip default&lt;/strong&gt;" and figured out the ip address should be 192.168.99.100. Then IÂ started the TensorFlow docker container again by using command "&lt;strong&gt;\$ docker run -it -p 8888:8888 gcr.io/tensorflow/tensorflow&lt;/strong&gt;". Now the Jupyter Notebook is working atÂ 192.168.99.100:8888.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shishu.info/wp-content/uploads/2016/05/Capture10-1.jpg"&gt;&lt;img alt="Capture10" class="aligncenter wp-image-147 size-full" height="473" src="http://shishu.info/wp-content/uploads/2016/05/Capture10-1.jpg" width="960"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I opened the first notebook and made a test run on the first cell. It worked!&lt;/p&gt;
&lt;p&gt;This is how I installed TensorFlow on my laptop via Docker. I hope it is useful to you. Feel free to leave your commentsÂ orÂ questions below!&lt;/p&gt;</content><category term="Machine Learning"></category></entry><entry><title>My Experience with Udacity Data Analyst Nano-degree</title><link href="https://sshu2017.github.io/my-experience-with-udacity-data-analyst-nano-degree.html" rel="alternate"></link><published>2016-05-07T08:11:00-07:00</published><updated>2016-05-07T08:11:00-07:00</updated><author><name>shushi2000</name></author><id>tag:sshu2017.github.io,2016-05-07:/my-experience-with-udacity-data-analyst-nano-degree.html</id><summary type="html">&lt;p&gt;After spending most of my spare time in the past 8 months, I finally graduated from the Udacity Data Analyst Nano-Degree program! Before I started this program, I have spent many hours searching online for reviews and discussions about it. Now I would like to share my whole experience with â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;After spending most of my spare time in the past 8 months, I finally graduated from the Udacity Data Analyst Nano-Degree program! Before I started this program, I have spent many hours searching online for reviews and discussions about it. Now I would like to share my whole experience with the internet and hope it is helpful to someone like me.Â Since I have also taken other courses at &lt;a href="https://www.coursera.org/"&gt;coursera.org&lt;/a&gt;Â and &lt;a href="https://www.edx.org/"&gt;edx.org&lt;/a&gt;, I can make some direct comparisons which should be helpful too.&lt;/p&gt;
&lt;p&gt;First, I would say it really requires a lot of time to finish the degree. I roughly spent 15 + hours each week on this program in the past 8 months. This maybe does not sound like a lot of time to you, but actually it is, especially if you have another full-time job. So don't jump into it if you can't afford the time. As for tuitions,Â I have paid \$1,600 for the program but Udacity will refund half of it because I finished the program within 12 months and I paidÂ all of my tuition out of my own pocket. I haven't received the refund yet because Udacity told me it takes 4 - 8 weeks to process. Just don't forget to submit a request for this refund - Udacity will not automatically refund it to you.&lt;/p&gt;
&lt;p&gt;The 8 projects covered a wide range of aspects in the data science field, including statistics, Python programing, R programing, machine learning, and D3.js data visualization. The Â Python and R programing focused on data manipulation, wrangling, and visualization. The machine learning course is really condensed and does not go deep in algorithms and theories, compared to other machine learning courses. Overall, this nano-degree really focuses on the analysis skills such as process data and find interesting stories. If you want to be a data scientist instead of data analyst, this nano-degree is probably not the best choice for you.&lt;/p&gt;
&lt;p&gt;There are many things I really liked about this program. First, Udacity has an amazing 'customer support' team. The coaches provide 1-0n-1 help sessions. Of course these coaching sessions need to be reserved first, which is fairly easy to do. Each help session is scheduled to be 20 minutes long, but a coach once chatted with me for more than an hour, until I really solved the problem. I only used online text chatting but it seems the coaches are open to other communication methods such as video-chatting or phone call as well. In addition, the discussion forum is a good resource that helped me finishing all the projects. The coaches reply to questions VERY quickly, usually in 30 min or less. And they are always very patient! The coaches also review the project submission in great details, give constructive feedbacks, and encourage the students all the time. I think this coaching team is the factor that makes this nano-degree program stand out, compared to other MOOC courses or specializations.&lt;/p&gt;
&lt;p&gt;However, I believe this program still has some room for improvement. My biggest frustrations came from the course videos. Maybe it is because Udacity only consider the course videos as supporting materials, or maybe it is because the course are taught by mentors from the industry, I felt that the course videos are nothing like a real class. For a substantial amount of portion, the videos are just two or more mentors talking. The course videos did not really help me too much in finishing my projects. Â I like the course videos on coursera.org much better because they are better organized and the contents are taught systematically. That is not the case with Udacity courses, at least for the data analyst nano-degree.&lt;/p&gt;
&lt;p&gt;Another question people care about this program is that if it really help the students finding a job. Well, I can't tell because I am just me, one sample, and there is not even a control sample. But at least the program gave me something to talkÂ about data analysis during my interviews, so I would say, yes, it is useful.&lt;/p&gt;
&lt;p&gt;Please feel free to comment below if you would like to take the program, are in the middle of the program, or have graduated. I'd be happy to answerÂ any questionsÂ about this Udacity Data Analyst Nano-degree.&lt;/p&gt;</content><category term="General"></category></entry><entry><title>Have Flights Delays decreased Over Time?</title><link href="https://sshu2017.github.io/have-flights-delays-decreased-over-time.html" rel="alternate"></link><published>2016-05-07T06:33:00-07:00</published><updated>2016-05-07T06:33:00-07:00</updated><author><name>sshu</name></author><id>tag:sshu2017.github.io,2016-05-07:/have-flights-delays-decreased-over-time.html</id><summary type="html">&lt;p&gt;I think it is not just me who would think that, as technology advances, the flight carriers are able to reduce the arrival delay over time. Is that really the case? I looked into the historic flights data and found something surprising and interesting.&lt;/p&gt;
&lt;p&gt;First I downloaded all the historic â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I think it is not just me who would think that, as technology advances, the flight carriers are able to reduce the arrival delay over time. Is that really the case? I looked into the historic flights data and found something surprising and interesting.&lt;/p&gt;
&lt;p&gt;First I downloaded all the historic flights data from &lt;a href="http://stat-computing.org/dataexpo/2009/the-data.html"&gt;stat-computing.org&lt;/a&gt;. Â These 22 years (1987 -2008) of data add up to be more than 10 GB. So I wrote &lt;a href="https://github.com/shushi2016/DataViz1/blob/FlightsRepo/AggregateFlightsData_v3.R"&gt;a piece of R code&lt;/a&gt;Â which can read each csv file and extract the information I need for each carrier in each year. Â I tried many different ways to aggregate the data, for example, using the yearly average, 75% quantile, 99% quantile, and the yearly maximum. Since there are so many flight records for each carrier each year, I only foundÂ the yearly maximum arrival delays hadÂ some clear trends over time.&lt;/p&gt;
&lt;p&gt;Surprisingly, this exploratory data analysisÂ suggested that the yearly maximum of arrival delays increased rather than decreased in these 22 years. This is somehow counter-intuitive to me because I thought the Information Technology has developed so much and should have helped to reduce the flights delay. Anyway, I used D3.js and created an interactive scatter-line plot to show these trends. Â Below is a thumbnail of the plot, which is linked to the real html file where the plot is hosted. The legend is clickable so you can select which carriers' data you would like to see or not see.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://shushi2016.github.io/DataViz1/" target="_blank"&gt;HEREÂ &lt;/a&gt; is the link to the interactive chart.&lt;/strong&gt;&lt;/p&gt;
&lt;div&gt;

&lt;img src="./images/flight_delay_chart.png" width="800" align="center"/&gt;



&lt;br&gt;&lt;br&gt;

After making this plot and looking back into the data set, I realized it is reasonable that the yearly maximum arrival delays have increased in the past. The major reasons I can speculate includes:

1.  More and more people are taking airplanes to travel therefore there are a lot more flights to manage for each carrier.
2.  The number of longer distance flights increased and chances of longer arrival delay increased.
3.  The yearly maximum delay are probably caused by some extreme weather conditions or natural disasters, which seem to happen more frequently in recent years.



Full code of the interactive chart:

&lt;br&gt;&lt;br&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/html;charset=utf-8&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;http-equiv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;style.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Flights Arrival Delay&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://d3js.org/d3.v3.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://dimplejs.org/dist/dimple.v2.1.6.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Data Visualization Project&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Historic Flights Data&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;chartContainer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;use strict&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newSvg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#chartContainer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;YearlyMaxTotal.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;Year&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;ArrDelay&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ArrDelay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;DepDelay&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DepDelay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;Carrier&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UniqueCarrier&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//add legend&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myLegend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addLegend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;//define a color palette&lt;/span&gt;
    &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultColors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#3498db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#2980b9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// blue&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#e74c3c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#c0392b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// red&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#2ecc71&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#27ae60&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// green&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#9b59b6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#8e44ad&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// purple&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#e67e22&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#d35400&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// orange&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#f1c40f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#f39c12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// yellow&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#1abc9c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#16a085&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// turquoise&lt;/span&gt;
      &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#95a5a6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#7f8c8d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// gray&lt;/span&gt;
      &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// change to time series plot&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addTimeAxis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overrideMin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1986&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overrideMax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%Y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2009&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ticks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;14px&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;y1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addMeasureAxis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ArrDelay&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fontSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;18px&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overrideMax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tickFormat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ticks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dots&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSeries&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Carrier&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addSeries&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Carrier&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// orphan the legend&lt;/span&gt;
    &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;legends&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;filterValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUniqueValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Carrier&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;myLegend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shapes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;newFilters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
        &lt;span class="nx"&gt;filterValues&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aggField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;hide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;newFilters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;opacity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;newFilters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aggField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
          &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;opacity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;filterValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newFilters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dimple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filterData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Carrier&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filterValues&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;titleShape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Arrival Delay [minute]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;titleShape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;//fine-tune the axises&lt;/span&gt;
    &lt;span class="nx"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;titleShape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Arrival Delay [minute]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;titleShape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_xPixels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_widthPixels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;myChart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_yPixels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text-anchor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;middle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;font-family&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sans-serif&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;font-weight&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bold&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Yearly Maximum Arrival-delay Time over Twenty Years&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;id &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;The legend area is clcikable! Try it!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Use Chrome or IE. For some reasons Firefox does not render the chart properly.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;







If you come up with other possible reasons, please leave it in the comments!</content><category term="Data visualization"></category></entry></feed>